<?php

namespace App\Application\Sonata\UserBundle\Entity;
use App\Entity\Candidat;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Sonata\AdminBundle\Util\ObjectAclManipulatorInterface;
use Sonata\AdminBundle\Admin\AdminInterface;
use Sonata\AdminBundle\Exception\ModelManagerException;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Security\Acl\Domain\UserSecurityIdentity;
//use FOS\UserBundle\Model\User as BaseUser;
use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Sonata\UserBundle\Model\UserInterface;
/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class User extends BaseUser implements ObjectAclManipulatorInterface
{
   /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

     
    public function getId()
    {
        return $this->id;
    }
   
    public static function getGenderList()
{
    return array(
        UserInterface::GENDER_UNKNOWN => 'gender_unknown',
        UserInterface::GENDER_FEMALE  => 'gender_female',
        UserInterface::GENDER_MALE    => 'gender_male',
    );
}
 /**
     * @var string
     *
     * @ORM\Column(name="firstname", type="string", length=255, nullable=true)
     */
    protected $firstname;

    /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Candidat", mappedBy="User")
     */
    private $candidats;

    public function __construct()
    {
        parent::__construct();
        $this->candidats = new ArrayCollection();
    }

    /**
     *
     *
     * @param string $firstname
     *
     * @return User
     */
    public function setFirstName( $firstname) {
        $this->firstname= $firstname;

        return $this;
    }

    /**
     *
     *
     * @return string
     */
   
    public function batchConfigureAcls(
        OutputInterface $output,
        AdminInterface $admin,
        UserSecurityIdentity $securityIdentity = null
    ){}

    /**
     * @return Collection|Candidat[]
     */
    public function getCandidats(): Collection
    {
        return $this->candidats;
    }

    public function addCandidat(Candidat $candidat): self
    {
        if (!$this->candidats->contains($candidat)) {
            $this->candidats[] = $candidat;
            $candidat->addUser($this);
        }

        return $this;
    }

    public function removeCandidat(Candidat $candidat): self
    {
        if ($this->candidats->contains($candidat)) {
            $this->candidats->removeElement($candidat);
            $candidat->removeUser($this);
        }

        return $this;
    }
}
